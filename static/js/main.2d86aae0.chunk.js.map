{"version":3,"sources":["Components/Images/paris.jpg","Components/Navbar.js","Components/Contact.js","Components/Footer.js","Components/Picture.js","Components/Header.js","Components/Layouts/Layout.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","bruh","display","marginRight","fontWeight","fontSize","overFlow","justifyContent","marginTop","style","theme","Navbar","css","makeStyles","root","width","heading","typography","pxToRem","fontWeightRegular","text","center","Footer","fill","options","height","amplitude","speed","points","ImageAvatar","src","photo","Header","data-tip","data-for","place","id","spaces","color","iconB","Layout","props","className","children","Home","href","icon","faGithub","size","faSpotify","faEnvelope","About","Routing","path","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2d86aae0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paris.9891be0f.jpg\";","import React from 'react';\nimport { Global, css } from '@emotion/core'\n\n\nvar bruh = {\n\n    display: \"flex\",\n    marginRight: \"40px\",\n    fontWeight: \"bold\",\n    fontSize: \"1.4em\",\n    overFlow: \"none\",\n    justifyContent: \"flex-end\",\n    marginTop: \"70px\",\n  \n\n}\n\nconst style = theme => css`\n  padding: 20px;\n  text-decoration: none;\n  display: inline-block;\n  font-weight: 700;\n  color: #e9e9e9;\n  background: none;\n  &:after {\n    display: block;\n    content: '';\n    border-bottom: solid 3px currentColor;\n    transform: scaleX(0);\n    transition: transform 250ms ease-in-out;\n    transform-origin: 100% 50%;\n    color: #ffa458;\n  }\n  &:hover:after {\n    transform: scaleX(1);\n    transform-origin: 0 50%;\n  }\n  &[disabled], &:disabled {\n    cursor: default;\n  }\n  &:visited {\n    color: #e9e9e9;\n  }\n  border: none;\n  cursor: pointer;\n\n\n`\n\n\nexport default function Navbar() {\n    return (\n      <nav>\n        <div style={ bruh }>\n        <div >\n          <a css={css` padding: 15px; `} css={ style } href=\"https://github.com/pvellacott\">Projects</a>\n        </div>\n        <div>\n          <a css={css` padding: 15px; `} css={ style } href='/about'>About</a>\n        </div>\n        </div>\n      </nav>\n    );\n }","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { css } from '@emotion/core'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nexport default function SimpleExpansionPanel() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}\n      css={css` width: 225px; `}\n    >\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading} \n          css={css`\n            margin-left: 45px;`}>\n              Contact me\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            vellacott.phil@gmail.com\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n \n  );\n}","import React from 'react';\nimport { Global, css } from '@emotion/core'\nimport './Layouts/Layouts.css';\nimport { faAutoprefixer } from '@fortawesome/free-brands-svg-icons';\nimport Wave from 'react-wavify'\n\n\nconst style = css`\n  position: absolute;\n  left: 0; \n  bottom: 0;\n  width: 100%;\n  height: 170px;\n  overflow: hidden;\n  > div:nth-of-type(2){\n    margin-top: 80px;\n  }\n`\nconst text = css`\n  z-index: 1;\n  bottom: 23px;\n  position: absolute;\n  font-weight: 700;\n  color: #e9e9e9;;\n`\n\nconst center = css`\n  display: flex;\n  justify-content: center;\n`\n\n\nexport default function Footer() {\n    return (\n    \n        <footer css={ style }>\n          <div css={ center }>\n            <div css={ text }>\n              <p css={css` color: #e9e9e9; `}>Phil Vellacott 2020 | Built with üñ•Ô∏è Computer.</p>\n            </div>\n          </div>\n          <Wave fill='#333333'\n            options={{\n              height: 10,\n              amplitude: 20,\n              speed: 0.15,\n              points: 3,\n            }}\n          />\n        </footer>\n    );\n }","import React from 'react';\nimport photo from './Images/paris.jpg';\nimport { css } from '@emotion/core'\n\n\n\nexport default function ImageAvatar() {\n  return (\n    <div>\n      <img css={css` width: 300px; height: 400px `} src={photo} />\n    </div>\n  );\n}","import React, { Component } from \"react\"\nimport ReactTooltip from 'react-tooltip'\nimport { Global, css } from '@emotion/core'\nimport ImageAvatar from './Picture'\n\n\nexport default function Header() {\n    return (\n        <div>\n             <h1 css={css` font-size: 3.1em; width: 200px; `} data-tip data-for=\"Tooltip\">I'm <span css={css` color: #ffa458; `}>Phil</span>.</h1>\n             <ReactTooltip place=\"bottom\" id=\"Tooltip\">\n                 <ImageAvatar></ImageAvatar>\n             </ReactTooltip>\n        </div>\n    )\n }","import React from 'react';\nimport { Global, css } from '@emotion/core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faSpotify } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './Layouts.css';\nimport Navbar from '../Navbar';\nimport SimpleExpansionPanel from '../Contact'\nimport Footer from '../Footer';\nimport Wave from 'react-wavify';\nimport Header from '../Header';\nimport photo from '../Images/paris.jpg';\n\n\nconst spaces = {\n    marginRight: '10px',\n    color: '#e9e9e9',\n}\n\nconst iconB = {\n    color: '#e9e9e9',\n}\n\nconst WEB_URL = \"https://github.com/pvellacott\";\nconst SPOT_URL = \"https://open.spotify.com/user/12174613455\"\nconst TWIT_URL = \"mailto:vellacott.phil@gmail.com\"\n\nconst Layout = ( props ) => (\n  <div className=\"container\">\n   <Navbar />\n    <main>\n      { props.children }\n    </main>\n    <Footer />\n  </div>\n) \n\nconst Routing = ( props ) => (    \n    <Router>\n        <Switch>\n            <Route path=\"/about\">\n              <Layout>\n                <About />\n              </Layout>\n            </Route>\n            <Route path=\"/\">\n              <Layout>\n                <Home />\n              </Layout>\n            </Route>\n        </Switch>\n    </Router>\n);\n\nconst Home = () => \n  <div>\n    <h1  css={css` font-size: 2.1em; margin-top: 120px; `}>Hi,</h1>\n    <Header />\n    <h4>Front-end developer. Montreal Quebec.</h4>\n    <div className=\"iconz\">\n      <a href={WEB_URL}><FontAwesomeIcon icon={ faGithub } size=\"md\" style={ spaces } /></a>\n      <a href={SPOT_URL}><FontAwesomeIcon icon={ faSpotify } size=\"md\" style={ spaces } /></a>\n      <a href={TWIT_URL}><FontAwesomeIcon icon={ faEnvelope } size=\"md\" style={ iconB } /></a>\n    </div>\n  </div>\n  \n\n\n const About = () =>\n    <div css={css`margin-top: 30px;`}>\n      <center>\n        <img css={css` width: 240px; height: 320px; border-radius: 10px `} src={photo} />\n        <p css={css`margin-top: 30px;`}><span css={css`font-size: 11px;`}>*Shakes your hand <span css={css`font-style: italic;`}>very</span> firmly*</span> My name is <span css={css`color: #ffa458; ;`}> Phil Vellacott</span> & I'm a Front-end Web developer based in Montreal, QB.</p>\n        <p css={css`margin-top: 30px;`}>Spending most of my time doing frontend web design.</p>\n        <p css={css`margin-top: 30px;`}>Love for all Web Technologies & learning new things to build better newer things.</p>\n        <p css={css`margin-top: 30px;`}>Checkout my latest projects on <a css={css`color: #ffa458; border: none;text-decoration: none; cursor: pointer; &:visited {color:#ffa458;}`} href='https://github.com/pvellacott'>Github</a> or if you'd like to get in contact with me reach me by <a css={css`color: #ffa458; border: none;text-decoration: none; cursor: pointer; &:visited {color: #ffa458;}`} href='mailto:vellacott.phil@gmail.com'>Email</a>.</p>\n      </center>\n      \n    </div>\n\nconst Projects = () =>\n<div css={css`margin-top: 30px;`}>\n  \n</div>\n  \n\n\n\nexport default Routing;","import React from 'react';\nimport './App.css';\n\nimport Layout from './Components/Layouts/Layout'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        \n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}